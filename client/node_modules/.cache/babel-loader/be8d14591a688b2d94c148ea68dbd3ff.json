{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* oncheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SEESION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOutStart), call(isUserAuthenticated), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/react/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["all","call","takeLatest","put","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInAfterSignUp","payload","user","isUserAuthenticated","signUp","email","password","displayName","createUserWithEmailAndPassword","signInWithGoogle","signInWithPopup","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","signInWithEmail","signInWithEmailAndPassword","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","oncheckUserSession","CHECK_USER_SEESION","userSagas"],"mappings":"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","sourcesContent":["import {all,call,takeLatest,put} from 'redux-saga/effects';\r\nimport  UserActionTypes from './user.types';\r\nimport {SignInSuccess,\r\n  SignInFailure,signOutSuccess,\r\n  signOutFailure,\r\nsignUpSuccess,\r\nsignUpFailure} from './user.actions'; \r\nimport {auth, \r\n    googleProvider,\r\n    createUserProfileDocument,\r\n  getCurrentUser} from\r\n     '../../firebase/firebase.utils';\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\nexport function* signInAfterSignUp({payload:{user,additionalData}})\r\n{\r\n yield  getSnapshotFromUserAuth(user,additionalData);\r\n}\r\nexport function* isUserAuthenticated(){\r\n  try{\r\n    const userAuth=yield getCurrentUser();\r\nif(!userAuth) return;\r\nyield getSnapshotFromUserAuth(userAuth);\r\n\r\n  }catch(error){\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\nexport function* signUp({payload:{email,password,displayName}}){\r\n  try{\r\n  const { user } = yield auth.createUserWithEmailAndPassword(\r\n    email,\r\n    password\r\n  );\r\n  yield put(signUpSuccess({user,additionalData:{displayName}}));\r\n  }catch(error){\r\n    yield put(signUpFailure(error));\r\n  }\r\n}\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\nexport function* onSignUpStart(){\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START,signUp);\r\n}\r\nexport function* onSignUpSuccess(){\r\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp);\r\n}\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } \r\n  catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signOut(){\r\n  try{\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess())\r\n  } catch(error){\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle); \r\n} \r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\nexport function* onSignOutStart(){\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut);\r\n}\r\nexport function* oncheckUserSession(){\r\nyield takeLatest(UserActionTypes.CHECK_USER_SEESION,isUserAuthenticated)\r\n}\r\n\r\nexport function* userSagas () {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n      call(onSignOutStart),\r\n      call(isUserAuthenticated),\r\n      call(onSignUpStart),\r\n      call(onSignUpSuccess)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}